import time

from keras.models import Sequential
from keras.layers import Merge
from keras.layers.core import Dense, Activation, Flatten
from keras.layers.normalization import BatchNormalization
from keras.layers.convolutional import Conv1D
from keras.layers.pooling import MaxPooling1D
from keras.optimizers import SGD

from logger import logger

# Hyper Parameters
learning_rate = 0.08
learning_decay = learning_rate / 32
bn_eps = 1

# Model Structure
md1 = Sequential()
md2 = Sequential()
md3 = Sequential()
md4 = Sequential()
md1.add(Conv1D(50, 1, padding='same', input_shape=(100, 8)))
md2.add(Conv1D(50, 3, padding='same', input_shape=(100, 8)))
md3.add(Conv1D(75, 5, padding='same', input_shape=(100, 8)))
md4.add(Conv1D(75, 7, padding='same', input_shape=(100, 8)))

model = Sequential()
model.add(Merge([md1, md2, md3, md4], mode='concat', concat_axis=-1))
model.add(BatchNormalization(epsilon=bn_eps))
model.add(MaxPooling1D())
model.add(Flatten())
model.add(Dense(4))
model.add(Activation('softmax'))

sgd = SGD(lr=learning_rate, decay=learning_decay, momentum=0.9, nesterov=True)
model.compile(loss='categorical_crossentropy', optimizer=sgd, metrics=['accuracy'])
