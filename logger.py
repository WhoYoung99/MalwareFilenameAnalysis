import csv
import logging
import sys
import time

def setup_default_logging():
    """logging: default logging"""
    fname = 'train_{}.log'.format(time.strftime('%Y%m%d-%H%M'))
    logging.basicConfig(filename=fname,
                        filemode='w',
                        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
                        level=logging.DEBUG)
    default_logger = logging.getLogger(__name__)
    stdout_handler = logging.StreamHandler(sys.stdout)
    default_logger.addHandler(stdout_handler)
    formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
    stdout_handler.setFormatter(formatter)
    # default_logger.setLevel(logging.INFO)
    return default_logger

def history_logging(model_fit):
    """
    Input: a keras model.fit history object
    Output: a csv file containing the history of fitting
    """
    header = ['loss', 'acc', 'val_loss', 'val_acc']
    data = zip(model_fit.history['loss'], model_fit.history['acc'],
               model_fit.history['val_loss'], model_fit.history['val_acc'])

    filename = 'fitting_history.csv'
    with open(filename, 'w', newline='') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(header)
        writer.writerows(data)
    logger.debug('logging training history to %s', filename)

logger = setup_default_logging()
