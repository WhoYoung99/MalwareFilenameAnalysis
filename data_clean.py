"""
Perform preprocess for csv file, return a well-formated Pandas dataframe
"""
# Python inherit
from os import listdir
from os.path import join, isfile, basename

# third-party library
import pandas as pd

# self-defined
from logger import logger

def clean_duplicate(dataframe):
    '''
    Drop Rules:
    1. blank 'FileFullPath' column
    2. blank 'File VSDT' column
    3. contents in all four column (as specified bellow) are identical
    4. content in 'FileFullPath' starts with 'C:'
    After dropping, reindex the dataframe
    '''
    # Remove rows without values
    dataframe = dataframe.dropna(subset=['FileFullPath'])
    dataframe = dataframe.dropna(subset=['File VSDT'])

    # Remove duplication, keep only the last entry
    dataframe = dataframe.drop_duplicates(subset=['sha1',
                                                  'FileFullPath',
                                                  'File VSDT',
                                                  'Malware Result'],
                                          keep='last')

    # Filename starts with C:\\..\.. will be discarded for being too long
    dataframe = dataframe[~dataframe.FileFullPath.str.startswith('C:')]
    dataframe = dataframe.reset_index(drop=True)
    return dataframe


def change_lable(dataframe):
    '''
    SolProviding_Auto represents the file is determined as malicious,
    and backend is automaticlly generating the pattern. So it's reasonable
    to change the label to 'Malicious'.
    '''
    ind = dataframe['Malware Result'] == 'SolProviding_Auto'
    dataframe.loc[ind, 'Malware Result'] = 'Malicious'
    return dataframe


def merge_csv(path):
    '''
    Input: the folder path contains TotalFileSubmission csv files
    Output: merged single csv without duplication
    '''
    logger.debug('Merge file with filename prepend with "TotalFileSubmission" only')
    out_fn = '{}_merge.csv'.format(basename(path))
    logger.debug('Output file: %s', out_fn)
    if isfile(join(path, out_fn)):
        logger.debug('File %s already exist, reading from it directly', out_fn)
        pass
    else:
        csv_list = [i for i in listdir(path) if i.startswith('TotalFileSubmission')]
        dataframe = pd.concat(pd.read_csv(join(path, i)) for i in csv_list)
        column_names = dataframe.columns.tolist()
        column_names[0] = 'Neuron Source Type'
        dataframe.columns = column_names
        dataframe = clean_duplicate(dataframe)
        dataframe = change_lable(dataframe)

        dataframe.to_csv(join(path, out_fn))
    # Here's a weird bug: (Takes me half day to locate it...)
    # If dataframe was return directly (not read from csv), problem encountered
    # when trying to access the column "FileFullPath".
    # Traceback message is ValueError: cannot broadcast shape (100, 8) to (100)
    # when try to cast np.array to [i for i in X_train]
    dataframe = pd.read_csv(join(path, out_fn), encoding='ISO-8859-1')
    return dataframe
